template: `<div class="page-header">
        <h1> Список сотрудников </h1>
    </div>

    
    <div class="panel">
        <div class="form-inline">
            <div class="form-group">
                <div class="col-md-8">
                    <input type="number" class="form-control" [(ngModel)]="id" placeholder = "id" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-8">
                    <input type="string" class="form-control" [(ngModel)]="firstName" placeholder = "Имя" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    <input type="string" class="form-control" [(ngModel)]="lastName" placeholder="Фамилия" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-8">
                    <button class="btn btn-default" (click)="addItem(id, firstName, lastName)">Добавить сотрудника</button>
                </div>
            </div>
        </div>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>id</th>
                    <th>Имя</th>
                    <th>Фамилия</th>
                </tr>
            </thead>
            
            <tbody>
                <tr *ngFor="let Worker of test">
                    <td>{{Worker.id}}</td>
                    <td>{{Worker.firstName}}</td>
                    <td>{{Worker.lastName}}</td>
                    <td class="btn btn-default" data-target="#staticBackdrop">1</td>
                    <td class="btn btn-default" data-target="#staticBackdrop">2</td>
                </tr>
                <!-- Button to trigger modal -->
                    <button data-target="#myModal" role="button" class="btn" data-toggle="modal">Launch demo modal</button>
            </tbody>
        </table>
       
    </div>`
    
    
    
    
    
    JAVAJAVAJAVJAJAJAJAJAJAJAJAJAJAJAJAJ
    
    
     for (var i = 0; i < this.test.length; i++) {
                if (id != this.test[i].id) {
                    this.test.push(new Worker(id, firstName, lastName));
                    return;


                }
            }
            
              for (var i = 0; i < this.arr.length; i++) {
                if (id != this.arr[i].id) {
                    this.arr.push(new Worker(id, firstName, lastName));
                    return;
                }
            }
            
            
            
            
            
            
            test: Worker[] = [
        { id: 0, firstName: 'Vasya', lastName: 'Bell' },
        { id: 1, firstName: 'Vasya', lastName: 'Bell' },
        { id: 2, firstName: 'Vasya', lastName: 'Bell' },
        { id: 3, firstName: 'Vasya', lastName: 'Bell' }

    ]
    
    
    
    
    
    
    
     for (var i = 0; i < this.test.length; i++) {
            if (id == this.test[i].id) {
                this.test.push(new Worker(id, firstName, lastName));
                return;
            } //else { this.test.push(new Worker(id, firstName, lastName)); }
        }
        
        
        
        var i: number = 0;
        while (i < this.test.length) {
            if (id != this.test[i].id) {
                this.test.push(new Worker(id, firstName, lastName));
                return;
                i++;
                break;

            } else {
                return alert("Deleted");
                break;
            }
            i++;
        }
        
        
        
        
        
        
        
        
        
         //условный оператор не выполняет требования
        for (var i = 0; i < this.test.length; i++) {
            if (id == this.test[i].id) {

                break;
            } else if (id != this.test[i].id) {
                this.test.push(new Worker(id, firstName, lastName));
                break;
            } else { return; }
        }
        return;